What happens when you initialize a repository? Why do you need to do it?

	As far as I understand, it appears that when you initialize, there is an initialized and newly created git repository in the folder you are in. This needs to be done in order to create a pointer for the folder.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is simply the area that is unseen, but is the intermediary between the working directory and the repository.

How can you use the staging area to make sure you have one commit per logical change?

	You can do this by using git dif --staged to compare what you have staged with what the most recent file contains, to ensure that you are not making changes that are higher than one, logically.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Branches would be helpful when you are creating different modes that will be entirely independant of eachother. They would help by creating easily editable independant files.

How do the diagrams help you visualize the branch structure?

	Diagrams help visualize the branch structure by making easily readable physical branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Merging two branches together results in a new commit being made with the two files combined in timestamp order. We represent it in the diagram so as to show that they are two independant branches that come together at a new point, and until the new commit was made, you could not reach a commit that was isolated when in a separate branch.